apply plugin: 'com.android.application'

def versionMajor = 0
def versionMinor = 9
def versionPatch = 3
def magicNumber = 9 * 1000 + 1 * 100 // last number before apply automatic logic

//TODO edit the changelog as well

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "org.iota.wallet"
        minSdkVersion 19
        targetSdkVersion 27
        // get rid from manual setting, and it prevents sometimes a nasty git push -f on master
        versionCode magicNumber + getGitCommitCount()
        versionName "${versionMajor}.${versionMinor}" + (versionPatch == 0 ? "" : ".${versionPatch}") + "-" + getGitHash()
        buildConfigField "String", "CI_BUILD_ID", "\"" + getBuildId() + "\""
        buildConfigField "String", "CI_BUILD_URL", "\"" + getBuildUrl() + "\""
        buildConfigField "String", "GIT_COMMIT_URL", "\"" + getGitCommitUrl() + "\""
        buildConfigField "String", "GIT_REPO_URL", "\"" + getGitRepoUrl() + "\""
        multiDexEnabled true
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
            minifyEnabled false
        }

        debug {
            versionNameSuffix " DEBUG"
        }

        lintOptions {
            ignoreWarnings true
            //jota
            disable 'InvalidPackage'
        }

    }
    packagingOptions {
        packagingOptions {
            exclude 'META-INF/DEPENDENCIES.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license/LICENSE.base64.txt'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

ext {
    supportLibrary = "27.0.2"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Support libraries
    implementation 'com.android.support:multidex:1.0.2'
    implementation "com.android.support:appcompat-v7:${supportLibrary}"
    implementation "com.android.support:cardview-v7:${supportLibrary}"
    implementation "com.android.support:recyclerview-v7:${supportLibrary}"
    implementation "com.android.support:preference-v7:${supportLibrary}"
    implementation "com.android.support:preference-v14:${supportLibrary}"
    implementation "com.android.support:design:${supportLibrary}"
    implementation "com.android.support:support-annotations:${supportLibrary}"
    implementation "com.android.support:design:${supportLibrary}"
    implementation "com.android.support:support-v13:${supportLibrary}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    // UI libraries
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'
    implementation 'com.github.hudomju:android-swipe-to-dismiss-undo:master-SNAPSHOT'
    implementation 'com.github.ozodrukh:CircularReveal:2.1.0'
    implementation 'com.github.aakira:expandable-layout:1.6.0@aar'
    implementation 'com.simplecityapps:recyclerview-fastscroll:1.0.16'
    implementation 'com.github.gabrielemariotti.changeloglib:changelog:2.1.0'
    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.3'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
    implementation 'com.github.kenglxn.QRGen:android:2.3.0'
    implementation 'com.heinrichreimersoftware:android-issue-reporter:1.3.1'
    // Other libraries
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'org.knowm.xchange:xchange-core:4.3.0'
    implementation 'org.knowm.xchange:xchange-bitstamp:4.3.0'
    implementation 'org.knowm.xchange:xchange-bitfinex:4.3.0'
    implementation 'org.knowm.xchange:xchange-okcoin:4.3.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.github.iotaledger:iota~lib~java:6c2df37'
}

static def getGitCommitCount() {
    def process = "git rev-list HEAD --count".execute()
    return process.text.toInteger()
}

static def getGitHash() {
    def process = "git rev-parse --short HEAD".execute()
    return process.text.toString().trim()
}

static def getGitRepoUrl() {
    def process = "git remote get-url origin --push".execute()
    return process.text.toString().replace(".git", "").trim()
}

static def getGitCommitUrl() {
    return getGitRepoUrl() + "/commit/" + getGitHash()
}

static def getBuildId() {
    return System.getenv("TRAVIS_BUILD_ID")
}

static def getBuildUrl() {
    return "https://travis-ci.org/" + System.getenv("TRAVIS_REPO_SLUG") + "/builds/" + getBuildId()
}